<Window x:Class="MedidorTiemposCSharp.ChooseTageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MedidorTiemposCSharp"
        mc:Ignorable="d"
        Title="ChooseTageWindows" MinHeight="280" MinWidth="380" Width="400" Height="400"
        Margin="10">
    <DockPanel>
        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Aceptar"/>
            <Button Grid.Column="1" Content="Cancelar"/>
        </Grid>
        <ItemsControl Margin="10" DockPanel.Dock="Bottom">
            <!--The ItemsControl has no default visual appearance.
              Use the Template property to specify a ControlTemplate to define
              the appearance of an ItemsControl. The ItemsPresenter uses the specified
              ItemsPanelTemplate (see below) to layout the items. If an
              ItemsPanelTemplate is not specified, the default is used. (For ItemsControl,
              the default is an ItemsPanelTemplate that specifies a StackPanel.-->
            <!--ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Border BorderBrush="Aqua" BorderThickness="1" CornerRadius="15">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template-->
            <!--Use the ItemsPanel property to specify an ItemsPanelTemplate
              that defines the panel that is used to hold the generated items.
              In other words, use this property if you want to affect
              how the items are laid out.-->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <!--Use the ItemTemplate to set a DataTemplate to define
              the visualization of the data objects. This DataTemplate
              specifies that each data object appears with the Priority
              and TaskName on top of a silver ellipse.-->
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!--DataTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataTemplate.Resources-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" IsChecked="{Binding checked}"/>
                        <!-- TODO Set text color to negative of tag -->
                        <TextBlock Text="{Binding Name}" Background="{Binding Color}"/>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <!--Use the ItemContainerStyle property to specify the appearance
              of the element that contains the data. This ItemContainerStyle
              gives each item container a margin and a width. There is also
              a trigger that sets a tooltip that shows the description of
              the data object when the mouse hovers over the item container.-->
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Control.Width" Value="125"/>
                    <Setter Property="Control.Margin" Value="5"/>
                    <!--Style.Triggers>
                        <Trigger Property="Control.IsMouseOver" Value="True">
                            <Setter Property="Control.ToolTip"
                                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                            Path=Content.Description}"/>
                        </Trigger>
                    </Style.Triggers-->
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DockPanel>
</Window>
